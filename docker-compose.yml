version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres:15.0
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      POSTGRES_DATABASE: todolist
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/zookeeper/config/zookeeper_jaas.conf"
    ports:
      - "22181:2181"
    volumes:
      - ./src/main/resources/docker/zookeeper_jaas_config.conf:/etc/zookeeper/config/zookeeper_jaas.conf

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TOPIC_AUTO_CREATE: todolist.notifications:1:1
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_config_jaas.conf"
    volumes:
      - ./src/main/resources/docker/kafka_jaas_config.conf:/etc/kafka/kafka_config_jaas.conf

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:7.4.4
    restart: always
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
    ports:
      - "28081:8081"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.36.2
    volumes:
      - ./src/main/resources/docker/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: "grafana/grafana-oss:10.2.2"
    ports:
      - "3000:3000"
    user: "root"
    environment:
      # Uncomment GF_SERVER_DOMAIN, GF_SERVER_ROOT_URL for using reverse proxy
      #GF_SERVER_DOMAIN: "grafana.domain.example" # change "grafana.domain.example" to your domain
      #GF_SERVER_ROOT_URL: "https://grafana.domain.example/" # change "grafana.domain.example" to your domain
      GF_RENDERING_SERVER_URL: "http://grafana-image-renderer:8081/render"
      GF_RENDERING_CALLBACK_URL: "http://grafana:3000/"

volumes:
  pgdata:
  prometheus_data: